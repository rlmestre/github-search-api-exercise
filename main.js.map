{"version":3,"sources":["./apps/github-search/src/app/http/http-app.module.ts","./apps/github-search/src/app/app.module.ts","./apps/github-search/src/app/search/search-service/search.service.ts","./apps/github-search/src/app/header/header.component.ts","./apps/github-search/src/app/header/header.component.html","./apps/github-search/src/app/http/error-handling.interceptor.ts","./apps/github-search/src/main.ts","./apps/github-search/src/app/app.component.ts","./apps/github-search/src/app/app.component.html","./apps/github-search/src/app/http/accept-header.interceptor.ts","./apps/github-search/src/environments/environment.ts","./apps/github-search/src/app/app-routing.module.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport {HTTP_INTERCEPTORS} from \"@angular/common/http\";\nimport {AcceptHeaderInterceptor} from \"./accept-header.interceptor\";\nimport {ErrorHandlingInterceptor} from \"./error-handling.interceptor\";\n\n@NgModule({\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: AcceptHeaderInterceptor, multi: true },\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorHandlingInterceptor, multi: true },\n  ]\n})\nexport class HttpAppModule { }\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { NZ_I18N } from 'ng-zorro-antd/i18n';\nimport { en_US } from 'ng-zorro-antd/i18n';\nimport { registerLocaleData } from '@angular/common';\nimport en from '@angular/common/locales/en';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {NzLayoutModule} from \"ng-zorro-antd/layout\";\nimport {HeaderModule} from \"./header/header.component\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {HttpAppModule} from \"./http/http-app.module\";\n\nregisterLocaleData(en);\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    HttpAppModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    HeaderModule,\n    NzLayoutModule,\n  ],\n  providers: [{ provide: NZ_I18N, useValue: en_US }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {ActivatedRoute, ParamMap, Router} from \"@angular/router\";\n\nimport {BehaviorSubject} from \"rxjs\";\nimport {\n  catchError,\n  distinctUntilChanged,\n  filter,\n  map,\n  scan,\n  shareReplay,\n  take,\n  tap\n} from \"rxjs/operators\";\n\nimport {SearchParameters} from \"../models/search.model\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n  error = '';\n\n  queryParams$ = this.route.queryParamMap.pipe(\n    filter(paramMap => !!paramMap.get('q')), // Ignore empty query to prevent errors\n    map(paramMap => this.extractKeys(paramMap)), // Map to plain object\n    distinctUntilChanged((prev, curr) =>\n      // Really basic object comparison to prevent repeat emits when params haven't changed.\n      JSON.stringify(prev) === JSON.stringify(curr)), // Normally I'd reach for lodash\n    tap(params => this.setSearches(params)),\n    shareReplay(), // Share among components\n  );\n\n  private _search = {\n    'repositories': new BehaviorSubject(null),\n    'users': new BehaviorSubject(null),\n  }\n\n  search = {\n    'repositories': this._search.repositories.asObservable().pipe(\n      // Fall back to previous emission on error.\n      scan((prev, next) => next ?? prev)\n    ),\n    'users': this._search.users.asObservable().pipe(\n      // Fall back to previous emission on error.\n      scan((prev, next) => next ?? prev)\n    ),\n  }\n\n  constructor(private http: HttpClient,\n              private route: ActivatedRoute,\n              private router: Router) {}\n\n  // Map QueryParamMap to plain object for external availability.\n  private extractKeys(paramMap: ParamMap): any {\n    let extractedParams = {\n      q: '',\n      type: 'repositories',\n      sort: '',\n      order: '',\n      page: '',\n    };\n\n    for (let key of paramMap.keys) {\n      extractedParams[key] = paramMap.get(key);\n    }\n\n    return extractedParams;\n  }\n\n  // Map HttpClient responses to BehaviorSubjects for reuse since\n  // HttpClient methods complete after one emit.\n  private setSearches(params: any) {\n    const { q, page, sort, order } = params;\n\n    for (let type in this.search) {\n      this.http.get(\n        `https://api.github.com/search/${type}`,\n        {\n          params: {\n            q, page, sort, order,\n            per_page: '10',\n          }\n        }\n      ).pipe(\n        // Return null on error so scan operator on the observables above\n        // can fall back to the previous emission.\n        catchError(() => null),\n      ).subscribe(response => this._search[type].next(response));\n    }\n  }\n\n  // In lieu of lastValueFrom 😬\n  getQueryParams() {\n    return this.queryParams$.pipe(take(1)).toPromise();\n  }\n\n  // Merge queryParams only when `q` doesn't change.\n  changeQuery(newParams: SearchParameters) {\n    const queryParamsHandling = ('q' in newParams) ? '' : 'merge';\n\n    this.router.navigate(['search'], {\n      queryParams: { ...newParams },\n      queryParamsHandling\n    });\n  }\n}\n","import {Component, OnInit, NgModule, HostListener, ViewChild} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule} from \"@angular/forms\";\n\nimport {NzLayoutModule} from \"ng-zorro-antd/layout\";\nimport {NzMenuModule} from \"ng-zorro-antd/menu\";\nimport {NzAffixModule} from \"ng-zorro-antd/affix\";\nimport {NzInputModule} from \"ng-zorro-antd/input\";\nimport {NzIconModule} from \"ng-zorro-antd/icon\";\nimport {SearchService} from \"../search/search-service/search.service\";\nimport {NzAlertModule} from \"ng-zorro-antd/alert\";\nimport {RouterModule} from \"@angular/router\";\n\n@Component({\n  selector: 'demo-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @ViewChild('searchField') searchField;\n  searchQ = '';\n  changeQuery = this.searchService.changeQuery.bind(this.searchService);\n\n  constructor(public searchService: SearchService) { }\n\n  ngOnInit() {\n    this.searchService.queryParams$.subscribe(params => this.searchQ = params['q']);\n  }\n\n  @HostListener('document:keydown./', ['$event'])\n  focusSearchKeyboardShortcut(event: KeyboardEvent) {\n    if (document.activeElement != this.searchField.nativeElement) {\n      this.searchField.nativeElement.focus();\n      event.preventDefault();\n    }\n  }\n}\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    NzLayoutModule,\n    NzMenuModule,\n    NzAffixModule,\n    NzInputModule,\n    NzIconModule,\n    FormsModule,\n    NzAlertModule,\n    RouterModule\n  ],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule {\n}\n","<nz-affix>\n  <nz-header>\n    <img class=\"logo\" src=\"assets/github-dark.png\" alt=\"GitHub icon logo\" />\n    <ul nz-menu nzTheme=\"dark\" nzMode=\"horizontal\">\n      <nz-input-group nzSuffixIcon=\"search\" style=\"max-width: 300px\">\n        <input nz-input placeholder=\"Search\" #searchField\n               [ngModel]=\"searchQ\" [ngModelOptions]=\"{ updateOn: 'blur' }\"\n               (ngModelChange)=\"changeQuery({ q: $event })\"\n               (keyup.enter)=\"changeQuery({ q: searchField.value })\" />\n      </nz-input-group>\n      <li nz-menu-item>Pull requests</li>\n    </ul>\n  </nz-header>\n\n  <nz-alert *ngIf=\"searchService.error\" nzBanner nzMessage=\"Something went wrong!\"\n            [nzDescription]=\"alert\"></nz-alert>\n  <ng-template #alert>\n    <span>{{ searchService.error }}</span>\n    <a [routerLink]=\"['search', '']\" style=\"margin-left: 1rem\"\n       (click)=\"searchService.error = ''\">Refresh</a>\n  </ng-template>\n</nz-affix>\n","import {Injectable} from '@angular/core';\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError} from \"rxjs/operators\";\nimport {SearchService} from \"../search/search-service/search.service\";\n\n@Injectable({providedIn: 'root'})\nexport class ErrorHandlingInterceptor implements HttpInterceptor {\n  constructor(private searchService: SearchService) {}\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      catchError(error => {\n        if (error instanceof HttpErrorResponse && error.status === 403) {\n          this.searchService.error = 'GitHub API rate limit reached. Try again in a minute.'\n        } else {\n          this.searchService.error = 'Try again later. You can still see your previous search if available.';\n        }\n\n        return of(error);\n      })\n    );\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'demo-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'github-search';\n}\n","<nz-layout>\n  <demo-header></demo-header>\n  <router-outlet></router-outlet>\n</nz-layout>\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class AcceptHeaderInterceptor implements HttpInterceptor {\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    request = request.clone({\n      setHeaders: { 'Accept': 'application/vnd.github.v3+json' }\n    });\n\n    return next.handle(request);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {NgModule} from \"@angular/core\";\nimport {Route, RouterModule} from \"@angular/router\";\n\nconst routes: Route[] = [\n  {\n    path: '**',\n    redirectTo: 'search'\n  },\n  { path: 'search',\n    loadChildren: () => import('./search/search.module')\n      .then(m => m.SearchModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}